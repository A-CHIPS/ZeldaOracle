

## TODO: Write the script loader for this.


#==============================================================
# Tile Data
#==============================================================

#	PROPERTIES	(name, value, editor_type, category, description);


TILE movable_block;
	SOLID		block;
	FLAGS		movable;
	SPRITE		tile_movable_block;
	SPRITEOBJ	tile_movable_block_asobject;
END;

TILE diamond_rock;
	SOLID		block;
	FLAGS		Switchable, SwitchStays;
	SPRITE		tile_diamond_rock;
	SPRITEOBJ	tile_diamond_rock_asobject;
	BREAKANIM	effect_rock_break;
END;

TILE bush;
	SOLID		block;
	FLAGS		Pickupable, Bombable, Burnable, Switchable, Cuttable;
	SPRITE		tile_bush;
	SPRITEOBJ	tile_bush_asobject;
	BREAKANIM	effect_leaves;
END;

TILE pot;
	SOLID		block;
	FLAGS		movable, pickupable, cuttable, switchable;
	SPRITE		tile_pot;
	SPRITEOBJ	tile_pot_asobject;
	BREAKANIM	effect_rock_break;
END;

TILE rock;
	SOLID		block;
	FLAGS		pickupable;
	SPRITE		tile_rock;
	SPRITEOBJ	tile_rock_asobject;
	BREAKANIM	effect_rock_break;
END;

TILE grass;
	FLAGS		Cuttable, Bombable, Burnable;
	SPRITE		tile_grass;
	ENVTYPE		Grass;
	BREAKANIM	effect_grass_leaves;
	MODEL		block;
END;

TILE sign;
	TYPE		TileSign;
	SOLID		block;
	FLAGS		pickupable, burnable, cuttable, switchable;
	SPRITE		tile_sign;
	SPRITEOBJ	tile_sign_asobject;
	BREAKANIM	effect_sign_break;
	PROPERTIES
		(string, text, "Hello World!",
			"Side Text", "text_message", "Text",
			"The text to display when the sign is read from the front.", false),
		(string, side_text,	"You can't read it from there!",
			"Text", "text_message", "Text",
			"The text to display when the sign is read from the sides/back.", false);
END;

TILE owl;
	TYPE		TileOwl;
	SOLID		block;
	SPRITELIST	tile_owl, tile_owl_activated;
	PROPERTIES
		(string, text, "<red>undefined<red>",
			"Text", "text_message", "",
			"The text to display when the owl is activated.", false);
END;

TILE lantern;
	TYPE		TileLantern;
	SOLID		block;
	SPRITELIST	tile_lantern_unlit, tile_lantern;
	PROPERTIES
		(boolean, lit, false,
			"Lit", "", "",
			 "Whether the lantern starts lit or not.", false);
END;

TILE chest;
	TYPE		TileChest;
	SOLID		block;
	SPRITELIST	tile_chest, tile_chest_open;
	PROPERTIES
		(string, reward, "rupees_1",
			"Reward", "reward", "",
			 "The reward contained inside the chest.", false);
END;

TILE reward;
	TYPE		TileReward;
	SOLID		center;
	PROPERTIES
		(string, reward, "heart_piece",
			"Reward", "reward", "",
			 "The reward to spawn.", false);
END;


#==============================================================
# TODO: Event Tile Data
#==============================================================

#EVENT warp;
#	TYPE		WarpEvent;
#	PROPERTIES	(warp_type,					"tunnel"),
#				(destination_level,			""),
#				(destination_warp_point,	""; END;
#END;
