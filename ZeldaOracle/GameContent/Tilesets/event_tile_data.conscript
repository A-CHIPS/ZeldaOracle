
#	PROPERTIES	(type, name, value);
#	PROPERTIES	(type, name, value, readable_name, editor_type, category, description);
#	PROPERTIES	(type, name, value, readable_name, (editor_type, editor_subtype), category, description);


#==============================================================================
# Event Tile Data
#==============================================================================

EVENTTILE warp;
	TYPE		WarpEvent;
	SPRITE		event_tile_warp_tunnel;
	PROPERTIES	(string,  warp_type,				"tunnel",	"Warp Type", ("enum", "WarpType"), "Warp", "The type of warp point."),
				(string,  destination_level,		"",			"Destination Level", "level", "Warp", "The level where the destination point is in."),
				(string,  destination_warp_point,	"",			"Destination Warp Point", ("warp", "destination_level"), "Warp", "The id of the warp point destination."),
				(integer, face_direction,			3,			"Face Direction", "direction", "Warp", "The direction the player should face when entering a room through this Warp Point.");
END;

EVENTTILE npc;
	TYPE		NPCEvent;
	SPRITE		npc_shopkeeper;
	PROPERTIES	(integer, npc_flags,		6, "NPC Options", ("enum_flags", "NPCFlags"), "NPC", "The options for the NPC."),
				(integer, direction,		0, "Direction", "direction", "NPC", "The default direction the NPC faces."),
				(string,  text,				"<red>undefined<red>", "Text", "text_message", "NPC", "The text to display when the NPC is talked to."),
				(string,  animation,		"npc_shopkeeper", "Animation", "animation", "NPC", "The animation of the NPC."),
				(string,  animation_talk,	"", "Talk Animation", "animation", "NPC", "The animation of the NPC when being talked to.");
END;


#==============================================================================
# Puzzles
#==============================================================================

EVENTTILE color_tile_puzzle;
	TYPE		EventColorTilePuzzle;
	SPRITE		event_tile_color_tile_puzzle;
	PROPERTIES	(boolean, solve_once, false, "Solve Once", "", "Puzzle", "Can the puzzle only be solved once and not unsolved?");
	EVENT		solved, "Solved", "Puzzle", "Occurs when the puzzle is solved.";
	EVENT		unsolve, "Unsolve", "Puzzle", "Occurs when the puzzle is unsolved (is no longer considered solved).";
END;


#==============================================================================
# Monsters
#==============================================================================

EVENTTILE monster;
	TYPE		MonsterEvent;
	SPRITE		monster_octorok;
	PROPERTIES	(integer, color,		0, "Color", ("enum", "MonsterColor"), "Monster", "The color of the monster."),
				(integer, respawn_type,	0, "Respawn Type", ("enum", "MonsterRespawnType"), "Monster", "How a monster respawns."),
				(string,  monster_type, MonsterOctorok, "Monster Type", "", "Monster", "The type of monster."),
				(boolean, dead, false);

	EVENT		die, "Die", "Monster", "Occurs when the monster dies.", (Monster, monster);
END;

MONSTER monster_octorok_red,			"monster_octorok",				MonsterOctorok,			red;	END;
MONSTER monster_octorok_blue,			"monster_octorok",				MonsterOctorok,			blue;	END;
MONSTER monster_moblin_red,				"monster_moblin",				MonsterMoblin,			red;	END;
MONSTER monster_moblin_blue,			"monster_moblin",				MonsterMoblin,			blue;	END;
MONSTER monster_pig_moblin_red,			"monster_pig_moblin",			MonsterPigMoblin,		red;	END;
MONSTER monster_pig_moblin_blue,		"monster_pig_moblin",			MonsterPigMoblin,		blue;	END;
MONSTER monster_darknut_red,			"monster_darknut",				MonsterDarknut,			red;	END;
MONSTER monster_darknut_blue,			"monster_darknut",				MonsterDarknut,			blue;	END;
MONSTER monster_lynel_red,				"monster_lynel",				MonsterLynel,			red;	END;
MONSTER monster_lynel_blue,				"monster_lynel",				MonsterLynel,			blue;	END;
MONSTER monster_gibdo,					"monster_gibdo",				MonsterGibdo,			red;	END;
MONSTER monster_rope,					"monster_rope",					MonsterRope,			green;	END;
MONSTER monster_beetle,					"monster_beetle",				MonsterBeetle,			green;	END;
MONSTER monster_blade_trap_red,			"monster_blade_trap",			MonsterBladeTrap,		red;	END;
MONSTER monster_blade_trap_blue,		"monster_blade_trap",			MonsterBladeTrap,		blue;	END;
MONSTER monster_blade_trap_green,		"monster_blade_trap",			MonsterBladeTrap,		green;	END;
MONSTER monster_blade_trap_orange,		"monster_blade_trap",			MonsterBladeTrap,		orange;	END;
MONSTER monster_spiked_beetle,			"monster_spiked_beetle",		MonsterSpikedBeetle,	blue;	END;
MONSTER monster_sand_crab,				"monster_sand_crab",			MonsterSandCrab,		orange;	END;
MONSTER monster_shrouded_stalfos,		"monster_shrouded_stalfos",		MonsterShroudedStalfos,	green;	END;
MONSTER monster_ghini,					"monster_ghini",				MonsterGhini,			red;	END;
MONSTER monster_zol_green,				"monster_zol",					MonsterZolGreen,		green;	END;
MONSTER monster_thwomp,					"monster_thwomp",				MonsterThwomp,			blue;	END;
MONSTER monster_thwimp,					"monster_thwimp",				MonsterThwomp,			blue;	END;
MONSTER monster_buzz_blob,				"monster_buzz_blob",			MonsterBuzzBlob,		green;	END;

#==============================================================================
# Event Tileset
#==============================================================================

EVENTTILESET events, (13, 13);

SETTILE ( 0, 0), warp;
SETTILE ( 1, 0), npc;

SETTILE ( 0, 1), color_tile_puzzle;

SETTILE ( 2, 0), monster_octorok_red;
SETTILE ( 3, 0), monster_octorok_blue;
SETTILE ( 2, 1), monster_moblin_red;
SETTILE ( 3, 1), monster_moblin_blue;
SETTILE ( 2, 2), monster_pig_moblin_red;
SETTILE ( 3, 2), monster_pig_moblin_blue;
SETTILE ( 2, 3), monster_darknut_red;
SETTILE ( 3, 3), monster_darknut_blue;
SETTILE ( 2, 4), monster_lynel_red;
SETTILE ( 3, 4), monster_lynel_blue;

SETTILE ( 4, 1), monster_zol_green;

SETTILE ( 4, 0), monster_ghini;
SETTILE ( 5, 0), monster_shrouded_stalfos;
SETTILE ( 6, 0), monster_gibdo;
SETTILE ( 7, 0), monster_rope;
SETTILE (10, 0), monster_beetle;
SETTILE (10, 1), monster_spiked_beetle;
SETTILE (10, 2), monster_sand_crab;

SETTILE (11, 0), monster_blade_trap_red;
SETTILE (11, 1), monster_blade_trap_blue;
SETTILE (11, 2), monster_blade_trap_green;
SETTILE (11, 3), monster_blade_trap_orange;
SETTILE (10, 4), monster_thwomp;
SETTILE (11, 4), monster_thwimp;
SETTILE ( 9, 4), monster_buzz_blob;

END;


