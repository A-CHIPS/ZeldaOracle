
#==============================================================
# Sprites
#==============================================================

LOAD SPRITES;
	
SPRITESHEET "tileset_objects",					(16, 16), (1, 1), (18, 18); END;
SPRITESHEET "tileset_objects_extras_16x16",		(16, 16), (1, 1), (18, 18); END;

#==============================================================
# Animations
#==============================================================

LOAD ANIMATIONS;

SPRITESHEET "tileset_objects_extras_16x16";

TEMPANIM lantern_lit; SUBSTRIP repeat;
	ADD strip, 16, 4, (0, 3); END;


#==============================================================
# Tiles
#==============================================================

LOAD TILESETS;

TEMPTILE lantern;
	TYPE		TileLantern;
	SOLID		block;
	PROPERTIES	(boolean, lit, true, "Lit", "", "",
				"Whether the lantern starts lit or not.", false),
				(boolean, stay_lit, false, "Stay Lit", "", "",
				"True if the lantern stays lit after leaving the room.", false);
	EVENT event_light, "Light", "Occurs when the lantern is lighted.", (Lantern, lantern);
	EVENT event_put_out, "Put Out", "Occurs when the lantern is put out.", (Lantern, lantern);
END;

TEMPTILE sign;
	TYPE		TileSign;
	SOLID		block;
	FLAGS		Pickupable, Burnable, Cuttable, Switchable, Boomerangable;
	BREAKANIM	effect_sign_break;
	PROPERTIES
		(string, text, "Hello World!",
			"Text", "text_message", "Text",
			"The text to display when the sign is read from the front.", false);
END;

TEMPTILE pushable_block;
	SOLID		block;
	FLAGS		movable;
	PROPERTIES	(boolean, move_once, true);
END;

TEMPTILE color_jump_pad;
	TYPE		TileColorJumpPad;
	PROPERTIES
		(show sprite_index);
END;

TEMPTILE button;
	TYPE		TileButton;
	#PROPERTIES	(string, on_press, "", "On Press", "script", "Events", "When the button is pressed.", false),
	#			(string, on_release, "", "On Release", "script", "Events", "When the button is released.", false);
	EVENT on_press, "On Press", "Occurs when the button is pressed.", (Button button);
	EVENT on_release, "On Release", "Occurs when the button is released.", (Button button);
END;

TILE dug;
	SPRITE "tileset_objects", (1, 2);
END;


#==============================================================
# Tilesets
#==============================================================

TILESET objects, tileset_objects, (12, 12);
DEFAULT (0, 3);

# ??
TILE (0, 3);
	FLAGS		Digable;
END;

# Bush
TILE (0, 0);
	SOLID		block;
	FLAGS		Pickupable, Bombable, Burnable, Switchable, Cuttable, AbsorbSeeds, Boomerangable;
	SPRITEOBJ	"tileset_objects_extras_16x16", (0, 0);
	BREAKANIM	effect_leaves;
END;

# Plant
TILE (1, 0);
	SOLID		block;
	FLAGS		Cuttable, Boomerangable;
	BREAKANIM	effect_leaves;
END;

# Flowers Red
TILE (2, 0);
	SOLID		block;
	FLAGS		Cuttable, Boomerangable;
	BREAKANIM	effect_leaves;
END;

# Flowers Blue
TILE (3, 0);
	SOLID		block;
	FLAGS		Cuttable, Boomerangable;
	BREAKANIM	effect_leaves;
END;

# Flowers Pink
TILE (4, 0);
	SOLID		block;
	FLAGS		Cuttable, Boomerangable;
	BREAKANIM	effect_leaves;
END;

# Flower
TILE (5, 0);
	SOLID		block;
	FLAGS		Cuttable, Boomerangable;
	BREAKANIM	effect_leaves;
END;

# Water Flower
TILE (6, 0);
	SOLID		block;
	FLAGS		Cuttable, Boomerangable;
	BREAKANIM	effect_leaves;
END;

# Mushroom
TILE (7, 0);
	SOLID		block;
	FLAGS		Pickupable;
	SPRITEOBJ	"tileset_objects_extras_16x16", (1, 0);
END;

# Seed
TILE (8, 0);
	SOLID		block;
	FLAGS		Pickupable, Cuttable, Switchable, Movable;
	SPRITEOBJ	"tileset_objects_extras_16x16", (2, 0);
	BREAKANIM	effect_rock_break;
END;

# Burnable Tree
TILE (9, 0);
	SOLID		block;
	FLAGS		Burnable, AbsorbSeeds;
END;

# Grass
TILE (10, 0);
	FLAGS		Cuttable, Burnable, Bombable, Boomerangable;
	ENVTYPE		Grass;
	BREAKANIM	effect_grass_leaves;
END;

# Grass 2
TILE (11, 0);
	FLAGS		Cuttable, Burnable, Bombable, Boomerangable;
	BREAKANIM	effect_grass_leaves;
END;

# Rock
TILE (0, 1);
	SOLID		block;
	FLAGS		Pickupable;
	SPRITEOBJ	"tileset_objects_extras_16x16", (3, 0);
	BREAKANIM	effect_rock_break;
END;

# Diamond Rock
TILE (1, 1);
	SOLID		block;
	FLAGS		Switchable, SwitchStays;
	SPRITEOBJ	"tileset_objects_extras_16x16", (4, 0);
	BREAKANIM	effect_rock_break;
END;

# Crystal
TILE (2, 1);
	SOLID		block;
	FLAGS		Cuttable;
	SPRITEOBJ	"tileset_objects_extras_16x16", (5, 0);
	BREAKANIM	effect_rock_break;
END;

# Pot
TILE (3, 1);
	SOLID		block;
	FLAGS		Cuttable, Movable, Pickupable, Switchable;
	SPRITEOBJ	"tileset_objects_extras_16x16", (6, 0);
	BREAKANIM	effect_rock_break;
END;

# Sign 
TILE (4, 1);
	CLONE		sign;
	SPRITEOBJ	"tileset_objects_extras_16x16", (7, 0);
END;

# Sign Old
TILE (5, 1);
	CLONE		sign;
	SPRITEOBJ	"tileset_objects_extras_16x16", (8, 0);
END;

# Movable Block
TILE (6, 1);
	CLONE		pushable_block;
	SPRITEOBJ	"tileset_objects_extras_16x16", (3, 1);
END;

# Bombable Block
TILE (7, 1);
	SOLID		block;
	FLAGS		Bombable;
	BREAKANIM	effect_rock_break;
END;

# Armos Statue
TILE (8, 1);
	CLONE		pushable_block;
	SPRITEOBJ	"tileset_objects_extras_16x16", (9, 0);
END;

# Gravestone
TILE (9, 1);
	CLONE		pushable_block;
	SPRITEOBJ	"tileset_objects_extras_16x16", (10, 0);
END;

# Fairy Satue
TILE (10, 1);
	CLONE		pushable_block;
	SPRITEOBJ	"tileset_objects_extras_16x16", (11, 0);
END;

# Ice Block
TILE (11, 1);
	CLONE		pushable_block;
END;

# Dirt pile
TILE (0, 2);
	SOLID		block;
	FLAGS		Digable;
END;

# Hole
TILE (2, 2);
	ENVTYPE		Hole;
END;

# Cracked Floor
TILE (3, 2);
	TYPE		TileCrackedFloor
	#FLAGS		surface; ???
END;

# Lantern
TILE (0, 5);
	CLONE		lantern;
	SPRITEINDEX	0, "lantern_lit";
	SPRITEINDEX 1, "tileset_objects_extras_16x16", (4, 3);
END;

# Button
TILE (2, 5);
	CLONE		button;
	SPRITEINDEX	0, "tileset_objects", (2, 5);
	SPRITEINDEX	1, "tileset_objects_extras_16x16", (6, 3);
END;

# Color Cube Slot
TILE (3, 5);
	TYPE TileColorCubeSlot;
	EVENT on_color_change, "Color Change", "Occurs when the color changes.",
		(ColorCubeSlot, tile, Color, color);
END;

# Color lantern
TILE (4, 5);
	TYPE TileColorLantern;
	SOLID block;
	EVENT on_color_change, "Color Change", "Occurs when the color changes.",
		(ColorLantern, tile, Color, color);
END;

# Color Jump Pad
TILE (5, 5);
	CLONE		color_jump_pad;
	SPRITEINDEX 2, "tileset_objects_extras_16x16", (7, 3);
	SPRITEINDEX 1, "tileset_objects_extras_16x16", (8, 3);
END;

TILE (6, 5);
	SPRITEINDEX 1, "tileset_objects", (7, 5);
	SPRITEINDEX 2, "tileset_objects_extras_16x16", (9, 3);
	PROPERTIES	
			(show, sprite_index);
END;

TILE (7, 5);
	SPRITEINDEX 1, "tileset_objects", (6, 5);
	SPRITEINDEX 2, "tileset_objects_extras_16x16", (9, 3);
	PROPERTIES	
			(show, sprite_index);
END;

# Platform
TILE (10, 5);
	TYPE TilePlatform;
END;


TILE (0, 7);
	TYPE		TileDoor;
	SOLID		block;
	PROPERTIES
		(integer, direction, 1,
			"Direction", "direction", "",
			"The direction the door is facing.", false);
END;
TILE (1, 7);
	TYPE		TileDoor;
	SOLID		block;
	PROPERTIES
		(integer, direction, 2,
			"Direction", "direction", "",
			"The direction the door is facing.", false);
END;
TILE (0, 8);
	TYPE		TileDoor;
	SOLID		block;
	PROPERTIES
		(integer, direction, 3,
			"Direction", "direction", "",
			"The direction the door is facing.", false);
END;
TILE (1, 8);
	TYPE		TileDoor;
	SOLID		block;
	PROPERTIES
		(integer, direction, 0,
			"Direction", "direction", "",
			"The direction the door is facing.", false);
END;


# Small key Door

TEMPTILE small_key_door;
	TYPE		TileSmallKeyDoor;
	SOLID		block;
	PROPERTIES
		(integer, direction, 0,
			"Direction", "direction", "",
			"The direction the door is facing.", false);
END;

TEMPTILE boss_key_door;
	TYPE		TileBossKeyDoor;
	SOLID		block;
	PROPERTIES
		(integer, direction, 0,
			"Direction", "direction", "",
			"The direction the door is facing.", false);
END;

TILE (4, 7);
	CLONE small_key_door;
	PROPERTIES (integer, direction, 1);
END;
TILE (5, 7);
	CLONE small_key_door;
	PROPERTIES (integer, direction, 2);
END;
TILE (4, 8);
	CLONE small_key_door;
	PROPERTIES (integer, direction, 3);
END;
TILE (5, 8);
	CLONE small_key_door;
	PROPERTIES (integer, direction, 0);
END;

# Boss key doors

TILE (6, 7);
	CLONE boss_key_door;
	PROPERTIES (integer, direction, 1);
END;
TILE (7, 7);
	CLONE boss_key_door;
	PROPERTIES (integer, direction, 2);
END;
TILE (6, 8);
	CLONE boss_key_door;
	PROPERTIES (integer, direction, 3);
END;
TILE (7, 8);
	CLONE boss_key_door;
	PROPERTIES (integer, direction, 0);
END;


# Eye Statue
TILE (0, 11);
	TYPE	TileEyeStatue;
	SOLID	block;
END;

# Key block
TILE (2, 11);
	TYPE	TileLockedBlock;
	SOLID	block;
END;

# Burnable Web Walls
TEMPTILE web_wall;
	SOLID block;
	FLAGS Burnable;
	END;
TILE (0, 9); CLONE web_wall; END;
TILE (1, 9); CLONE web_wall; END;
TILE (0, 10); CLONE web_wall; END;
TILE (1, 10); CLONE web_wall; END;

# Bombable Walls
TEMPTILE bombable_wall;
	SOLID block;
	FLAGS Burnable;
	END;
TILE (2, 9); CLONE bombable_wall; END;
TILE (3, 9); CLONE bombable_wall; END;
TILE (2, 10); CLONE bombable_wall; END;
TILE (3, 10); CLONE bombable_wall; END;

END;